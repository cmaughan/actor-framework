# Biicode configuration file

[requirements]


[paths]
  # Local directories to look for headers (within block)
  libcaf_core
  libcaf_io
  libcaf_opencl
  libcaf_riac
  libcaf_test

[dependencies]
  # Manual adjust file implicit dependencies, add (+), remove (-), or overwrite (=)

  # Nothing depends on the tests
  libcaf_core/src/* - libcaf_core/test/*
  libcaf_io/src/* - libcaf_io/test/*
  libcaf_opencl/src/* - libcaf_opencl/unit_testing/* libcaf_opencl/examples/*

  # The test runner depends on all the tests
  libcaf_test/src/caf-test.cpp - libcaf_opencl/unit_testing/* libcaf_opencl/examples/*
  libcaf_test/src/caf-test.cpp + libcaf_core/test/* libcaf_io/test/*  

  # Always include the license files when any hpp file is referenced
  *.hpp + !LICENSE !LICENSE_ALTERNATIVE !README.md

  # Include this helper module so libcaf's makefile can figure out compiler version
  * + !cmake/get_compiler_version.cpp

[mains]
  # Manual adjust of files that define an executable
  # !main.cpp  # Do not build executable from this file
  # main2.cpp # Build it (it doesnt have a main() function, but maybe it includes it)

  # Don't build this helper module from biicode
  !cmake/get_compiler_version.cpp

  # File has a main method for the tests, but looks can be deceiving
  !libcaf_test/caf/test/unit_test_impl.hpp

  # It doesn't look like it but this file is the test runner we should build
  libcaf_test/src/caf-test.cpp

[tests]
  # Manual adjust of files that define a CTest test
  # test/* pattern to evaluate this test/ folder sources like tests
  libcaf_test/src/caf-test.cpp
  libcaf_opencl/unit_testing/*
  libcaf_opencl/examples/*
  
[hooks]
  # These are defined equal to [dependencies],files names matching bii*stage*hook.py
  # will be launched as python scripts at stage = {post_process, clean}
  # CMakeLists.txt + bii/my_post_process1_hook.py bii_clean_hook.py

[includes]
  # Mapping of include patterns to external blocks
  # hello*.h: user3/depblock  # includes will be processed as user3/depblock/hello*.h

[data]
  # Manually define data files dependencies, that will be copied to bin for execution
  # By default they are copied to bin/user/block/... which should be taken into account
  # when loading from disk such data
  # image.cpp + image.jpg  # code should write open("user/block/image.jpg")

[parent]
	caf_bot/actor-framework: 4
